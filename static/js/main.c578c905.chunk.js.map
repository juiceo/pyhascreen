{"version":3,"sources":["logo.svg","SnowReport/index.js","SnowForecast/index.js","WeatherForecast/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SnowReport","snowReport","this","props","react_default","a","createElement","className","uppersnow_cm","lowersnow_cm","conditions","newsnow_cm","lastsnow","reportdate","Component","SnowForecast","date","forecast","forDate","_","filter","f","snowMm","sumBy","snow_mm","Math","round","label","moment","format","dateFormatted","add","_this","dates","getDates","map","getSnowForecast","renderForecast","WeatherForecast","console","log","APP_KEY","SNOWREPORT","concat","RESORTFORECAST","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","loading","error","updateData","bind","assertThisInitialized","ms","arguments","length","undefined","Promise","resolve","reject","setTimeout","fetch","then","res","json","_this2","setState","all","getSnowReport","getForecast","delay","data","catch","err","_this$state","onClick","lib_default","assign","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","centerMode","arrows","src_SnowReport","src_SnowForecast","src_WeatherForecast","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c578c905.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport moment from 'moment-timezone';\nimport './style.css';\n\nconst PEAK_HEIGHT = '380m';\nconst VALLEY_HEIGHT = '170m';\n\nclass SnowReport extends Component {\n\n\tstatic propTypes = {\n\t\tsnowReport: PropTypes.object,\n\t};\n\n\trender() {\n\n\t\tconst { snowReport } = this.props;\n\n\n\t\treturn (\n\t\t\t<div className=\"SnowReport\">\n\t\t\t\t<div className=\"SnowReport--Current\">\n\t\t\t\t\t<h3 className=\"SnowReport--Current_Title\">SNOW DEPTH</h3>\n\t\t\t\t\t<div className=\"SnowReport--Current_Content\">\n\t\t\t\t\t\t<div className=\"SnowReport--Current_section align-left\">\n\t\t\t\t\t\t\t<span className=\"SnowReport--Current_section-label\"><strong>PEAK</strong> {PEAK_HEIGHT}</span>\n\t\t\t\t\t\t\t<span className=\"SnowReport--Current_section-value\">{snowReport.uppersnow_cm}cm</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<i className=\"SnowReport--Current_icon fas fa-mountain fa-5x\"></i>\n\t\t\t\t\t\t<div className=\"SnowReport--Current_section align-right\">\n\t\t\t\t\t\t\t<span className=\"SnowReport--Current_section-label\"><strong>VALLEY</strong> {VALLEY_HEIGHT}</span>\n\t\t\t\t\t\t\t<span className=\"SnowReport--Current_section-value\">{snowReport.lowersnow_cm}cm</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"SnowReport--Current_Extras\">\n\t\t\t\t\t\t<div className=\"SnowReport--Current_Extras-item\">\n\t\t\t\t\t\t\t<span className=\"SnowReport--Current_Extras-item_label\">CONDITIONS</span>\n\t\t\t\t\t\t\t<span className=\"SnowReport--Current_Extras-item_value\">{snowReport.conditions}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"SnowReport--Current_Extras\">\n\t\t\t\t\t\t<div className=\"SnowReport--Current_Extras-item\">\n\t\t\t\t\t\t\t<span className=\"SnowReport--Current_Extras-item_label\">NEW SNOW</span>\n\t\t\t\t\t\t\t<span className=\"SnowReport--Current_Extras-item_value\">{snowReport.newsnow_cm}cm</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"SnowReport--Current_Extras-item\">\n\t\t\t\t\t\t\t<span className=\"SnowReport--Current_Extras-item_label\">LAST SNOW</span>\n\t\t\t\t\t\t\t<span className=\"SnowReport--Current_Extras-item_value\">{snowReport.lastsnow}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"SnowReport--Current_Extras-item\">\n\t\t\t\t\t\t\t<span className=\"SnowReport--Current_Extras-item_label\">REPORT DATE</span>\n\t\t\t\t\t\t\t<span className=\"SnowReport--Current_Extras-item_value\">{snowReport.reportdate}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default SnowReport;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport moment from 'moment-timezone';\nimport './style.css';\n\nclass SnowForecast extends Component {\n\n\tstatic propTypes = {\n\t\tforecast: PropTypes.object,\n\t};\n\n\tgetSnowForecast(date) {\n\t\tconst { forecast } = this.props;\n\n\t\tconst forDate = _.filter(forecast.forecast, (f) => {\n\t\t\treturn f.date === date;\n\t\t});\n\n\t\tconst snowMm = _.sumBy(forDate, (forecast) => {\n\t\t\treturn forecast.snow_mm;\n\t\t});\n\n\t\treturn Math.round(snowMm / 10);\n\t}\n\n\tgetDates() {\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tlabel: 'Today',\n\t\t\t\tdate: moment().format('DD/MM/YYYY'),\n\t\t\t\tdateFormatted: moment().format('DD.MM'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Tomorrow',\n\t\t\t\tdate: moment().add(1, 'days').format('DD/MM/YYYY'),\n\t\t\t\tdateFormatted: moment().add(1, 'days').format('DD.MM'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: moment().add(2, 'days').format('dddd'),\n\t\t\t\tdate: moment().add(2, 'days').format('DD/MM/YYYY'),\n\t\t\t\tdateFormatted: moment().add(2, 'days').format('DD.MM'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: moment().add(3, 'days').format('dddd'),\n\t\t\t\tdate: moment().add(3, 'days').format('DD/MM/YYYY'),\n\t\t\t\tdateFormatted: moment().add(3, 'days').format('DD.MM'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: moment().add(4, 'days').format('dddd'),\n\t\t\t\tdate: moment().add(4, 'days').format('DD/MM/YYYY'),\n\t\t\t\tdateFormatted: moment().add(4, 'days').format('DD.MM'),\n\t\t\t}\n\t\t];\n\t}\n\n\trenderForecast() {\n\t\tconst dates = this.getDates();\n\n\t\treturn _.map(dates, (date) => {\n\t\t\tconst forecast = this.getSnowForecast(date.date);\n\t\t\treturn (\n\t\t\t\t<div className=\"SnowReport--Forecast_Row\">\n\t\t\t\t\t<div className=\"SnowReport--Forecast_Row-label\">\n\t\t\t\t\t\t<span><strong>{date.label}</strong>{date.dateFormatted}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"SnowReport--Forecast_Row-value\">\n\t\t\t\t\t\t<span>+ {forecast}cm</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t})\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=\"SnowReport\">\n\t\t\t\t<div className=\"SnowReport--Forecast\">\n\t\t\t\t\t<h3 className=\"SnowReport--Forecast_Title\">SNOW FORECAST</h3>\n\t\t\t\t\t{this.renderForecast()}\n\t\t\t\t</div>\n\n\t\t\t</div >\n\t\t);\n\t}\n};\n\nexport default SnowForecast;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport moment from 'moment-timezone';\nimport './style.css';\n\nclass WeatherForecast extends Component {\n\n\tstatic propTypes = {\n\t\tforecast: PropTypes.object,\n\t};\n\n\tgetSnowForecast(date) {\n\t\tconst { forecast } = this.props;\n\n\t\tconst forDate = _.filter(forecast.forecast, (f) => {\n\t\t\treturn f.date === date;\n\t\t});\n\n\t\tconst snowMm = _.sumBy(forDate, (forecast) => {\n\t\t\treturn forecast.snow_mm;\n\t\t});\n\n\t\treturn Math.round(snowMm / 10);\n\t}\n\n\tgetDates() {\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tlabel: 'Today',\n\t\t\t\tdate: moment().format('DD/MM/YYYY'),\n\t\t\t\tdateFormatted: moment().format('DD.MM'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Tomorrow',\n\t\t\t\tdate: moment().add(1, 'days').format('DD/MM/YYYY'),\n\t\t\t\tdateFormatted: moment().add(1, 'days').format('DD.MM'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: moment().add(2, 'days').format('dddd'),\n\t\t\t\tdate: moment().add(2, 'days').format('DD/MM/YYYY'),\n\t\t\t\tdateFormatted: moment().add(2, 'days').format('DD.MM'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: moment().add(3, 'days').format('dddd'),\n\t\t\t\tdate: moment().add(3, 'days').format('DD/MM/YYYY'),\n\t\t\t\tdateFormatted: moment().add(3, 'days').format('DD.MM'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: moment().add(4, 'days').format('dddd'),\n\t\t\t\tdate: moment().add(4, 'days').format('DD/MM/YYYY'),\n\t\t\t\tdateFormatted: moment().add(4, 'days').format('DD.MM'),\n\t\t\t}\n\t\t];\n\t}\n\n\trenderForecast() {\n\t\tconst dates = this.getDates();\n\n\t\treturn _.map(dates, (date) => {\n\t\t\tconst forecast = this.getSnowForecast(date.date);\n\t\t\treturn (\n\t\t\t\t<div className=\"SnowReport--Forecast_Row\">\n\t\t\t\t\t<div className=\"SnowReport--Forecast_Row-label\">\n\t\t\t\t\t\t<span><strong>{date.label}</strong>{date.dateFormatted}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"SnowReport--Forecast_Row-value\">\n\t\t\t\t\t\t<span>+ {forecast}cm</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t})\n\t}\n\n\trender() {\n\n\t\tconsole.log(this.props.forecast);\n\n\t\treturn (\n\t\t\t<div className=\"WeatherForecast\">\n\t\t\t\t<h3 className=\"WeatherForecast--Title\">WEATHER FORECAST</h3>\n\t\t\t\t<div className=\"WeatherForecast--Header\">\n\t\t\t\t\t<div className=\"WeatherForecast--Column flex\"></div>\n\t\t\t\t\t<div className=\"WeatherForecast--Column\">°C Top</div>\n\t\t\t\t\t<div className=\"WeatherForecast--Column\">°C Base</div>\n\t\t\t\t\t<div className=\"WeatherForecast--Column\">Wind</div>\n\t\t\t\t\t<div className=\"WeatherForecast--Column\">Visibility</div>\n\t\t\t\t\t<div className=\"WeatherForecast--Column\">Cloud %</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"WeatherForecast--Rows\">\n\t\t\t\t\t<div className=\"WeatherForecast--Row\">\n\t\t\t\t\t\t<div className=\"WeatherForecast--Column flex\">Now</div>\n\t\t\t\t\t\t<div className=\"WeatherForecast--Column\">-12</div>\n\t\t\t\t\t\t<div className=\"WeatherForecast--Column\">-11</div>\n\t\t\t\t\t\t<div className=\"WeatherForecast--Column\">23 m/s</div>\n\t\t\t\t\t\t<div className=\"WeatherForecast--Column\">1km</div>\n\t\t\t\t\t\t<div className=\"WeatherForecast--Column\">46%</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div >\n\t\t);\n\t}\n};\n\nexport default WeatherForecast;","import React, { Component } from 'react';\nimport Promise from 'bluebird';\nimport Slider from 'react-slick';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport SnowReport from './SnowReport';\nimport SnowForecast from './SnowForecast';\nimport WeatherForecast from './WeatherForecast';\n\nconst APP_ID = '791fab78';\nconst APP_KEY = '7cf16343a0795614ebe6eee81846b72c';\nconst RESORT_ID = '54883819'; //Pyhä\nconst SNOWREPORT = `https://api.weatherunlocked.com/api/snowreport/${RESORT_ID}?app_id=${APP_ID}&app_key=${APP_KEY}`;\nconst RESORTFORECAST = `https://api.weatherunlocked.com/api/resortforecast/${RESORT_ID}?app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: true,\n      snowReport: null,\n      forecast: null,\n    };\n\n    this.updateData = this.updateData.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateData();\n  }\n\n  delay(ms = 1000) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(function () {\n        resolve();\n      }, ms);\n    })\n  }\n\n  getSnowReport() {\n    return fetch(SNOWREPORT)\n      .then(res => res.json());\n  }\n\n  getForecast() {\n    return fetch(RESORTFORECAST)\n      .then(res => res.json());\n  }\n\n  updateData() {\n\n    this.setState({\n      loading: true,\n      error: false,\n    }, () => {\n      Promise.all([\n        this.getSnowReport(),\n        this.getForecast(),\n        this.delay(1000),\n      ]).then(data => {\n        this.setState({\n          loading: false,\n          snowReport: data[0],\n          forecast: data[1]\n        });\n\n      }).catch(err => {\n        console.log('Error fetching data', err);\n        this.setState({\n          loading: false,\n          error: true,\n        });\n      });\n    });\n  }\n\n  render() {\n\n    const { forecast, snowReport } = this.state;\n\n    if (this.state.loading && (!this.state.forecast || !this.state.snowReport)) {\n      return (\n        <div className=\"App\">\n          <div className=\"App--Loading\">\n            <i className=\"fas fa-snowflake fa-spin fa-3x\"></i>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.state.error) {\n      return (\n        <div className=\"App\">\n          <div className=\"App--Error\">\n            <i className=\"far fa-frown fa-3x\"></i>\n            <h3>Oops, something went wrong...</h3>\n            <button className=\"App--Error_reload\" onClick={this.updateData}>Try again</button>\n          </div>\n        </div>\n      );\n    }\n\n    const settings = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      autoplay: true,\n      autoplaySpeed: 5000,\n      centerMode: true,\n      arrows: false,\n    };\n\n    return (\n      <div className=\"App\">\n        <div className=\"App--Content\">\n          <Slider {...settings} className=\"Slider\">\n            <div className=\"Slide\">\n              <div className=\"Slide--Content\">\n                <div className=\"Slide--Content_inner\">\n                  <SnowReport snowReport={snowReport} />\n                </div>\n              </div>\n            </div>\n            <div className=\"Slide\">\n              <div className=\"Slide--Content\">\n                <div className=\"Slide--Content_inner\">\n                  <SnowForecast forecast={forecast} />\n                </div>\n              </div>\n            </div>\n            <div className=\"Slide\">\n              <div className=\"Slide--Content\">\n                <div className=\"Slide--Content_inner\">\n                  <WeatherForecast forecast={forecast} />\n                </div>\n              </div>\n            </div>\n          </Slider>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}